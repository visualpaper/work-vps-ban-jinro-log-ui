type User {
  id: ID!
  villageNumbers: [Int]!
}

# 人狼
# 狂信者
# 狂人
# 妖狐
# 背徳者
# 占い師
# 霊能
# 狩人
# 猫又
# 共有
# 村人
enum VillagePosition {
  WOLF
  FANATIC
  MADMAN
  FOX
  APOSTATE
  SEER
  MEDIUM
  HUNTER
  CAT
  MASON
  VILLAGER
}

enum VillageCast {
  A
  B
  C
  D
  Z
}

type VillageBans {
  position: VillagePosition!
  trip: String!
}

type Village {
  id: ID!
  number: Int!
  endDate: String!
  url: String!
  name: String!
  people: Int!
  cast: VillageCast!
  bans: [VillageBans!]!
}

type VillageResult {
  totalItems: Int!
  items: [Village]!
}

input VillagesInput {
  trip: String
  people_min: Int
  people_max: Int
  cast: [VillageCast]!
  position: [VillagePosition]!
  skip: Int! = 0
  take: Int! = 5
}

type Query {
  villages(input: VillagesInput!): VillageResult!
}

type Mutation {
  initialize: User!
}
